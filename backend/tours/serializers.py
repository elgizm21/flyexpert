from rest_framework import serializers
from django.shortcuts import get_object_or_404
from .models import Tour, Booking

# âœ… Tur Serializer (BÃ¼tÃ¼n turlarÄ± JSON formatÄ±nda gÃ¶ndÉ™rir)
class TourSerializer(serializers.ModelSerializer):
    class Meta:
        model = Tour
        fields = '__all__'  # BÃ¼tÃ¼n sahÉ™lÉ™ri JSON olaraq gÃ¶ndÉ™rir

# âœ… Rezervasiya Serializer (Ä°stifadÉ™Ã§ilÉ™r Ã¼Ã§Ã¼n)
class BookingSerializer(serializers.ModelSerializer):
    user = serializers.ReadOnlyField(source='user.email')  # ğŸŸ¢ Ä°stifadÉ™Ã§i email-i gÃ¶stÉ™rilir

    class Meta:
        model = Booking
        fields = ['id', 'user', 'tour', 'num_seats', 'created_at']  # ğŸ”— YalnÄ±z lazÄ±mlÄ± sahÉ™lÉ™ri gÃ¶ndÉ™r

    def validate_num_seats(self, value):
        """ ğŸ›‘ BoÅŸ yer yoxdursa rezervasiya etmÉ™yÉ™ icazÉ™ vermÉ™ """
        tour_id = self.initial_data.get("tour")  # POST sorÄŸusundakÄ± turun ID-ni gÃ¶tÃ¼r
        tour = get_object_or_404(Tour, id=tour_id)  # Tour obyektini bazadan gÃ¶tÃ¼r

        if tour.available_seats < value:
            raise serializers.ValidationError(f"YalnÄ±z {tour.available_seats} yer mÃ¶vcuddur.")
        return value

    def create(self, validated_data):
        """ âœ… Rezervasiya yaradÄ±ldÄ±qdan sonra turun available_seats sahÉ™sini yenilÉ™ """
        tour = validated_data['tour']
        num_seats = validated_data['num_seats']

        if tour.available_seats < num_seats:
            raise serializers.ValidationError(f"Bu tur Ã¼Ã§Ã¼n yalnÄ±z {tour.available_seats} yer mÃ¶vcuddur.")

        # MÃ¶vcud yerlÉ™ri yenilÉ™
        tour.available_seats -= num_seats
        tour.save()

        return super().create(validated_data)
